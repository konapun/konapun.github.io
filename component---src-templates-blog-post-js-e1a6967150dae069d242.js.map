{"version":3,"sources":["webpack:///./src/components/layout/BlogLayout.js","webpack:///./src/templates/blog-post.js"],"names":["posts","seo","children","config","useContext","DataContext","displayedPosts","slice","itemsBeforeOverflow","useNavigation","map","node","id","fields","slug","name","frontmatter","title","href","data","pageContext","post","markdownRemark","allPosts","allMarkdownRemark","previous","next","edges","className","description","tags","tag","to","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","rel"],"mappings":"oKAKe,gBAAoC,IAAD,IAAhCA,aAAgC,MAAxB,GAAwB,EAApBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAC3BC,EAASC,qBAAWC,KACpBC,EAAiBN,EAAMO,MAAM,EAAGJ,EAAOK,qBAU7C,OARAC,YAAc,YACTH,EAAeI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACnCC,GAAID,EAAKE,OAAOC,KAChBC,KAAMJ,EAAKK,YAAYC,MACvBC,KAAK,QAASP,EAAKE,OAAOC,WAK5B,kBAAC,IAAD,CAAYG,MAAOhB,GAChBC,K,kCCnBP,wDAIe,sBAA4B,IAAzBiB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACEC,EAAsCF,EAAtDG,eAAyCC,EAAaJ,EAAhCK,kBACtBC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,KAEZT,EAAQI,EAAKL,YAAYC,MAC/B,OACE,kBAAC,IAAD,CAAYjB,MAAOuB,EAASI,MAAO1B,IAAKgB,GACtC,iCACE,4BAAQW,UAAU,QAChB,4BACGP,EAAKL,YAAYC,OAEnBI,EAAKL,YAAYa,aAChB,4BACGR,EAAKL,YAAYa,aAGtB,yBAAKD,UAAU,YACZP,EAAKL,YAAYc,KAAKpB,KAAI,SAAAqB,GAAG,OAC5B,yBAAKH,UAAU,kBACb,kBAAC,OAAD,CAAMI,GAAE,cAAgBD,GACrBA,QAKT,2BACGV,EAAKL,YAAYiB,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQd,EAAKe,SAGnD,6BACE,wBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMO,GAAE,SAAWP,EAASZ,OAAOC,KAAQ6B,IAAI,QAA/C,KACKlB,EAAST,YAAYC,QAI9B,4BACGS,GACC,kBAAC,OAAD,CAAMM,GAAE,SAAWN,EAAKb,OAAOC,KAAQ6B,IAAI,QACxCjB,EAAKV,YAAYC,MADpB","file":"component---src-templates-blog-post-js-e1a6967150dae069d242.js","sourcesContent":["import React, {useContext} from 'react'\nimport useNavigation from '../nav/useNavigation'\nimport PageLayout from './PageLayout'\nimport DataContext from '../data/DataContext'\n\nexport default ({ posts = [], seo, children }) => {\n  const config = useContext(DataContext)\n  const displayedPosts = posts.slice(0, config.itemsBeforeOverflow)\n\n  useNavigation([\n    ...displayedPosts.map(({ node }) => ({\n      id: node.fields.slug,\n      name: node.frontmatter.title,\n      href: `/blog${node.fields.slug}`\n    }))\n  ])\n\n  return (\n    <PageLayout title={seo}>\n      {children}\n    </PageLayout>\n  )\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport BlogLayout from '../components/layout/BlogLayout'\n\nexport default ({ data, pageContext }) => {\n  const { markdownRemark: post, allMarkdownRemark: allPosts } = data\n  const { previous, next } = pageContext\n\n  const title = post.frontmatter.title\n  return (\n    <BlogLayout posts={allPosts.edges} seo={title}>\n      <article>\n        <header className=\"mb-5\">\n          <h1>\n            {post.frontmatter.title}\n          </h1>\n          {post.frontmatter.description && (\n            <h4>\n              {post.frontmatter.description}\n            </h4>\n          )}\n          <div className=\"tag-list\">\n            {post.frontmatter.tags.map(tag => (\n              <div className='tag tag--small'>\n                <Link to={`/blog/tags/${tag}`}>\n                  {tag}\n                </Link>\n              </div>\n            ))}\n          </div>\n          <p>\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`/blog/${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/blog/${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </BlogLayout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}