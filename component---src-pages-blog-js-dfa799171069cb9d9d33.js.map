{"version":3,"sources":["webpack:///./src/components/layout/BlogLayout.js","webpack:///./src/pages/blog.js"],"names":["posts","seo","children","config","useContext","DataContext","displayedPosts","slice","itemsBeforeOverflow","useNavigation","map","node","id","fields","slug","name","frontmatter","title","href","data","tags","allMarkdownRemark","group","edges","className","tag","totalCount","to"],"mappings":"oKAKe,gBAAoC,IAAD,IAAhCA,aAAgC,MAAxB,GAAwB,EAApBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAC3BC,EAASC,qBAAWC,KACpBC,EAAiBN,EAAMO,MAAM,EAAGJ,EAAOK,qBAU7C,OARAC,YAAc,YACTH,EAAeI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACnCC,GAAID,EAAKE,OAAOC,KAChBC,KAAMJ,EAAKK,YAAYC,MACvBC,KAAK,QAASP,EAAKE,OAAOC,WAK5B,kBAAC,IAAD,CAAYG,MAAOhB,GAChBC,K,kCCnBP,oEAKe,sBAAe,IAAZiB,EAAW,EAAXA,KACVC,EAAOD,EAAKE,kBAAkBC,MAC9BtB,EAAQmB,EAAKE,kBAAkBE,MAGrC,OACE,kBAAC,IAAD,CAAYvB,MAAOA,EAAOC,IAFd,aAGV,4BAHU,aAIV,kBAAC,IAAD,CAAUD,MAAOA,IAEjB,oCACA,yBAAKwB,UAAU,YACZJ,EAAKV,KAAI,gBAAEe,EAAF,EAAEA,IAAKC,EAAP,EAAOA,WAAP,OACR,yBAAKF,UAAU,OACb,kBAAC,OAAD,CAAMG,GAAE,cAAgBF,GAClBA,EADN,KACcC,EADd","file":"component---src-pages-blog-js-dfa799171069cb9d9d33.js","sourcesContent":["import React, {useContext} from 'react'\nimport useNavigation from '../nav/useNavigation'\nimport PageLayout from './PageLayout'\nimport DataContext from '../data/DataContext'\n\nexport default ({ posts = [], seo, children }) => {\n  const config = useContext(DataContext)\n  const displayedPosts = posts.slice(0, config.itemsBeforeOverflow)\n\n  useNavigation([\n    ...displayedPosts.map(({ node }) => ({\n      id: node.fields.slug,\n      name: node.frontmatter.title,\n      href: `/blog${node.fields.slug}`\n    }))\n  ])\n\n  return (\n    <PageLayout title={seo}>\n      {children}\n    </PageLayout>\n  )\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport BlogLayout from '../components/layout/BlogLayout'\nimport BlogList from '../components/blog/BlogList'\n\nexport default ({ data }) => {\n  const tags = data.allMarkdownRemark.group\n  const posts = data.allMarkdownRemark.edges\n\n  const title = 'All Posts'\n  return (\n    <BlogLayout posts={posts} seo={title}>\n      <h2>{title}</h2>\n      <BlogList posts={posts}/>\n\n      <h3>Tags</h3>\n      <div className='tag-list'>\n        {tags.map(({tag, totalCount}) => (\n          <div className='tag'>\n            <Link to={`/blog/tags/${tag}`}>\n              {`${tag} (${totalCount})`}\n            </Link>\n          </div>\n        ))}\n      </div>\n    </BlogLayout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}